[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2022-05-03 14:08:37.212589",
  "name": "Sales Invoice-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "// Copyright (c) 2022, pibiCo and contributors\n// For license information, please see license.txt\n\nfrappe.ui.form.on('Sales Invoice', {\n  onload(frm) {\n   \n  },\n  refresh(frm) {\n    if (!frm.doc.set_different_folder){\n      frappe.call({\n        method: 'pibidav.pibidav.custom.get_nc_settings',\n          args: {\n            'doctype': frm.doc.doctype\n          },\n          callback: function(r) {\n            // code snippet\n            // console.log(r.message);\n            if (r.message !== undefined) {\n              frm.set_value('nc_enable', 1);\n              frm.set_value('nc_folder', r.message);\n\t\t      frm.refresh_field('nc_enable');\n\t\t      frm.refresh_field('nc_folder');\n            }\n          }\n      });    \n    }\n    if (!frm.doc.nc_enable && !frm.doc.__islocal) {\n      frm.set_value(\"nc_folder\", \"\");\n      frm.refresh_field(\"nc_folder\");\n    }\n    // Query Filter for Attachment Item for files attached to this doctype and uploaded to nextcloud\n    // to fill in the table if they have not been already fetched from server\n    frm.fields_dict.attachment_item.grid.get_field('attachment').get_query = function(doc, cdt, cdn) {\n      var child = locals[cdt][cdn];\n      //console.log(child);\n      return {    \n        filters:[\n          ['attached_to_doctype', '=', frm.doc.doctype],\n          ['attached_to_name', '=', frm.doc.name],\n          ['uploaded_to_nextcloud', '=', 1],\n        ]\n      };\n    };\n  },\n  nc_enable(frm) {\n    if (frm.doc.nc_enable && !frm.doc.__islocal) {\n      frm.set_value(\"nc_enable\", 1);\n      frm.refresh_field(\"nc_enable\");\n      frm.save();\n      new frappe.ui.pibiDocs();\n    }\n  },\n  set_different_folder(frm) {\n    if (frm.doc.nc_enable && frm.doc.set_different_folder) {\n      frm.set_value(\"nc_enable\", 1);\n      frm.set_value(\"set_different_folder\", 1);\n      frm.refresh_field(\"nc_enable\");\n      frm.refresh_field(\"set_different_folder\");\n      frm.save();\n      new frappe.ui.pibiDocs();\n    }\n  },\n});\nfrappe.ui.form.on(\"Attachment Item\", {\n  attachment: function(frm, cdt, cdn) {\n    var row = locals[cdt][cdn];\n    var nc_link = row.nc_url;\n    if (nc_link === undefined){\n      frappe.model.get_value('File', {'name': row.attachment}, ['share_link', 'fileid'], function(d) {\n        var share_link = d.share_link;\n        var nc_url = share_link.substring(0, share_link.length - 17);\n        var file_link = nc_url + 'apps/files/?fileid=' + d.fileid;\n        row.nc_url = '<a href=\"' + file_link + '\" target=\"_blank\">NextCloud</a>';\n      });\n    }\n  }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2022-05-03 15:06:25.345870",
  "name": "Customer-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "// Copyright (c) 2022, pibiCo and contributors\n// For license information, please see license.txt\n\nfrappe.ui.form.on('Customer', {\n  onload(frm) {\n   \n  },    \n  refresh(frm) {\n    if (!frm.doc.set_different_folder){\n      frappe.call({\n        method: 'pibidav.pibidav.custom.get_nc_settings',\n          args: {\n            'doctype': frm.doc.doctype\n          },\n          callback: function(r) {\n            // code snippet\n            // console.log(r.message);\n            if (r.message !== undefined) {\n              frm.set_value('nc_enable', 1);\n              frm.set_value('nc_folder', r.message);\n\t\t      frm.refresh_field('nc_enable');\n\t\t      frm.refresh_field('nc_folder');\n            }\n          }\n      });    \n    }\n    if (!frm.doc.nc_enable && !frm.doc.__islocal) {\n      frm.set_value(\"nc_folder\", \"\");\n      frm.refresh_field(\"nc_folder\");\n    }\n    // Query Filter for Attachment Item for files attached to this doctype and uploaded to nextcloud\n    // to fill in the table if they have not been already fetched from server\n    frm.fields_dict.attachment_item.grid.get_field('attachment').get_query = function(doc, cdt, cdn) {\n      var child = locals[cdt][cdn];\n      //console.log(child);\n      return {    \n        filters:[\n          ['attached_to_doctype', '=', frm.doc.doctype],\n          ['attached_to_name', '=', frm.doc.name],\n          ['uploaded_to_nextcloud', '=', 1],\n        ]\n      };\n    };\n  },\n  nc_enable(frm) {\n    if (frm.doc.nc_enable && !frm.doc.__islocal) {\n      frm.set_value(\"nc_enable\", 1);\n      frm.refresh_field(\"nc_enable\");\n      frm.save();\n      new frappe.ui.pibiDocs();\n    }\n  },\n  set_different_folder(frm) {\n    if (frm.doc.nc_enable && frm.doc.set_different_folder) {\n      frm.set_value(\"nc_enable\", 1);\n      frm.set_value(\"set_different_folder\", 1);\n      frm.refresh_field(\"nc_enable\");\n      frm.refresh_field(\"set_different_folder\");\n      frm.save();\n      new frappe.ui.pibiDocs();\n    }\n  },\n});\nfrappe.ui.form.on(\"Attachment Item\", {\n  attachment: function(frm, cdt, cdn) {\n    var row = locals[cdt][cdn];\n    var nc_link = row.nc_url;\n    if (nc_link === undefined){\n      frappe.model.get_value('File', {'name': row.attachment}, ['share_link', 'fileid'], function(d) {\n        var share_link = d.share_link;\n        var nc_url = share_link.substring(0, share_link.length - 17);\n        var file_link = nc_url + 'apps/files/?fileid=' + d.fileid;\n        row.nc_url = '<a href=\"' + file_link + '\" target=\"_blank\">NextCloud</a>';\n      });\n    }\n  }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Event",
  "enabled": 1,
  "modified": "2022-05-03 14:08:55.583510",
  "name": "Event-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Event', {\n onload(frm) {\n   if (frm.doc.sync_with_caldav) {\n\t  sync_caldav(frm);    \n   }\n   frm.fields_dict.minute_item.grid.get_field('consequent_event').get_query = function(doc, cdt, cdn) {\n     var child = locals[cdt][cdn];\n     //console.log(child);\n     return {    \n       filters:[\n         ['name', '!=', doc.name],\n         ['status', '!=', 'Closed']\n       ]\n     };\n   };\n   frm.add_custom_button(__(\"Send Invitation\"), function() {\n      //console.log(__(\"Your Code here\"));\n      Invitations();\n\t}, __(\"Invitations\"));\n },\n refresh(frm) {\n   if (frm.doc.sync_with_caldav) {\n\t  sync_caldav(frm);    \n   }\n   if (!frm.doc.set_different_folder){\n      frappe.call({\n        method: 'pibidav.pibidav.custom.get_nc_settings',\n          args: {\n            'doctype': frm.doc.doctype\n          },\n          callback: function(r) {\n            // code snippet\n            // console.log(r.message);\n            if (r.message !== undefined) {\n              frm.set_value('nc_enable', 1);\n              frm.set_value('nc_folder', r.message);\n\t\t      frm.refresh_field('nc_enable');\n\t\t      frm.refresh_field('nc_folder');\n            }\n          }\n      });    \n   }\n   if (!frm.doc.nc_enable && !frm.doc.__islocal) {\n     frm.set_value(\"nc_folder\", \"\");\n     frm.refresh_field(\"nc_folder\");\n   }\n   // Query Filter for Attachment Item for files attached to this doctype and uploaded to nextcloud\n   // to fill in the table if they have not been already fetched from server\n   frm.fields_dict.attachment_item.grid.get_field('attachment').get_query = function(doc, cdt, cdn) {\n      var child = locals[cdt][cdn];\n      //console.log(child);\n      return {    \n        filters:[\n          ['attached_to_doctype', '=', frm.doc.doctype],\n          ['attached_to_name', '=', frm.doc.name],\n          ['uploaded_to_nextcloud', '=', 1],\n        ]\n      };\n    };\n },\n sync_with_caldav(frm) {\n   if (frm.doc.sync_with_caldav) {\n      sync_caldav(frm);\n   }\n   frm.add_custom_button(__(\"Send Invitation\"), function() {\n      //console.log(__(\"Your Code here\"));\n      Invitations();\n\t}, __(\"Invitations\"));\n },\n nc_enable(frm) {\n   if (frm.doc.nc_enable && !frm.doc.__islocal) {\n     frm.set_value(\"nc_enable\", 1);\n     frm.refresh_field(\"nc_enable\");\n     frm.save();\n     new frappe.ui.pibiDocs();\n   }\n },\n set_different_folder(frm) {\n    if (frm.doc.nc_enable && frm.doc.set_different_folder) {\n      frm.set_value(\"nc_enable\", 1);\n      frm.set_value(\"set_different_folder\", 1);\n      frm.refresh_field(\"nc_enable\");\n      frm.refresh_field(\"set_different_folder\");\n      frm.save();\n      new frappe.ui.pibiDocs();\n    }\n  },\n validate(frm) {\n   if (frm.doc.sync_with_caldav) {\n     if (frm.doc.caldav_id_calendar === undefined) {\n       msgprint(__(\"Please Select a CalDav Calendar\"));\n       frappe.validated = false;\n     }       \n   }     \n }\n});\nfrappe.ui.form.on(\"Attachment Item\", {\n  attachment: function(frm, cdt, cdn) {\n    var row = locals[cdt][cdn];\n    var nc_link = row.nc_url;\n    if (nc_link === undefined){\n      frappe.model.get_value('File', {'name': row.attachment}, ['share_link', 'fileid'], function(d) {\n        var share_link = d.share_link;\n        var nc_url = share_link.substring(0, share_link.length - 17);\n        var file_link = nc_url + 'apps/files/?fileid=' + d.fileid;\n        row.nc_url = '<a href=\"' + file_link + '\" target=\"_blank\">NextCloud</a>';\n      });\n    }\n  }\n});\nfunction sync_caldav(frm) {\n  if (frappe.session.user != 'Administrator') {\n    frappe.call({\n      method: \"pibidav.pibidav.pibical.get_calendar\",\n      args: {\n        nuser: frappe.session.user,\n      },\n      callback(r) {\n        var data = r.message;\n        var options = [];\n        if (data.length > 0) {\n          for (var i = 0; i < data.length; i++) {\n            options.push({\n              'label': data[i].name,\n              'value': data[i].url\n            });\n\t      }\n        }     \n        frm.set_df_property(\"caldav_id_calendar\", \"options\", options);\n        frm.set_value(\"caldav_id_calendar\", options[data.length-1].value);\n        frm.refresh_field(\"caldav_id_calendar\");\n      }\n    });\n  }      \n}\nfunction Invitations() {\n  var d = new frappe.ui.Dialog({\n    title: __('Invitations'),\n\tfields: [\n\t  {\n\t    fieldtype: 'HTML',\n\t\tfieldname: 'text_area'\n\t  }\n\t],\n\tprimary_action_label: __('Send Email'),\n\tprimary_action: () => console.log(__('Send Email'))\n  });\n\n  d.fields_dict.text_area.$wrapper.html('<div style=\"height: 100;\"><h4>In Progress - Preparing Invitation Communication</h4></div>');\n  d.show();\n}",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Invoice",
  "enabled": 1,
  "modified": "2022-05-03 14:08:29.777425",
  "name": "Purchase Invoice-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "// Copyright (c) 2022, pibiCo and contributors\n// For license information, please see license.txt\n\nfrappe.ui.form.on('Purchase Invoice', {\n  onload(frm) {\n   \n  },    \n  refresh(frm) {\n    if (!frm.doc.set_different_folder){\n      frappe.call({\n        method: 'pibidav.pibidav.custom.get_nc_settings',\n          args: {\n            'doctype': frm.doc.doctype\n          },\n          callback: function(r) {\n            // code snippet\n            // console.log(r.message);\n            if (r.message !== undefined) {\n              frm.set_value('nc_enable', 1);\n              frm.set_value('nc_folder', r.message);\n\t\t      frm.refresh_field('nc_enable');\n\t\t      frm.refresh_field('nc_folder');\n            }\n          }\n      });    \n    }\n    if (!frm.doc.nc_enable && !frm.doc.__islocal) {\n      frm.set_value(\"nc_folder\", \"\");\n      frm.refresh_field(\"nc_folder\");\n    }\n    // Query Filter for Attachment Item for files attached to this doctype and uploaded to nextcloud\n    // to fill in the table if they have not been already fetched from server\n    frm.fields_dict.attachment_item.grid.get_field('attachment').get_query = function(doc, cdt, cdn) {\n      var child = locals[cdt][cdn];\n      //console.log(child);\n      return {    \n        filters:[\n          ['attached_to_doctype', '=', frm.doc.doctype],\n          ['attached_to_name', '=', frm.doc.name],\n          ['uploaded_to_nextcloud', '=', 1],\n        ]\n      };\n    };\n  },\n  nc_enable(frm) {\n    if (frm.doc.nc_enable && !frm.doc.__islocal) {\n      frm.set_value(\"nc_enable\", 1);\n      frm.refresh_field(\"nc_enable\");\n      frm.save();\n      new frappe.ui.pibiDocs();\n    }\n  },\n  set_different_folder(frm) {\n    if (frm.doc.nc_enable && frm.doc.set_different_folder) {\n      frm.set_value(\"nc_enable\", 1);\n      frm.set_value(\"set_different_folder\", 1);\n      frm.refresh_field(\"nc_enable\");\n      frm.refresh_field(\"set_different_folder\");\n      frm.save();\n      new frappe.ui.pibiDocs();\n    }\n  },\n});\nfrappe.ui.form.on(\"Attachment Item\", {\n  attachment: function(frm, cdt, cdn) {\n    var row = locals[cdt][cdn];\n    var nc_link = row.nc_url;\n    if (nc_link === undefined){\n      frappe.model.get_value('File', {'name': row.attachment}, ['share_link', 'fileid'], function(d) {\n        var share_link = d.share_link;\n        var nc_url = share_link.substring(0, share_link.length - 17);\n        var file_link = nc_url + 'apps/files/?fileid=' + d.fileid;\n        row.nc_url = '<a href=\"' + file_link + '\" target=\"_blank\">NextCloud</a>';\n      });\n    }\n  }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Timesheet",
  "enabled": 1,
  "modified": "2022-05-03 14:08:22.337667",
  "name": "Timesheet-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "// Copyright (c) 2022, pibiCo and contributors\n// For license information, please see license.txt\n\nfrappe.ui.form.on('Timesheet', {\n  onload(frm) {\n   \n  },    \n  refresh(frm) {\n    if (!frm.doc.set_different_folder){\n      frappe.call({\n        method: 'pibidav.pibidav.custom.get_nc_settings',\n          args: {\n            'doctype': frm.doc.doctype\n          },\n          callback: function(r) {\n            // code snippet\n            // console.log(r.message);\n            if (r.message !== undefined) {\n              frm.set_value('nc_enable', 1);\n              frm.set_value('nc_folder', r.message);\n\t\t      frm.refresh_field('nc_enable');\n\t\t      frm.refresh_field('nc_folder');\n            }\n          }\n      });    \n    }\n    if (!frm.doc.nc_enable && !frm.doc.__islocal) {\n      frm.set_value(\"nc_folder\", \"\");\n      frm.refresh_field(\"nc_folder\");\n    }\n    // Query Filter for Attachment Item for files attached to this doctype and uploaded to nextcloud\n    // to fill in the table if they have not been already fetched from server\n    frm.fields_dict.attachment_item.grid.get_field('attachment').get_query = function(doc, cdt, cdn) {\n      var child = locals[cdt][cdn];\n      //console.log(child);\n      return {    \n        filters:[\n          ['attached_to_doctype', '=', frm.doc.doctype],\n          ['attached_to_name', '=', frm.doc.name],\n          ['uploaded_to_nextcloud', '=', 1],\n        ]\n      };\n    };\n  },\n  nc_enable(frm) {\n    if (frm.doc.nc_enable && !frm.doc.__islocal) {\n      frm.set_value(\"nc_enable\", 1);\n      frm.refresh_field(\"nc_enable\");\n      frm.save();\n      new frappe.ui.pibiDocs();\n    }\n  },\n  set_different_folder(frm) {\n    if (frm.doc.nc_enable && frm.doc.set_different_folder) {\n      frm.set_value(\"nc_enable\", 1);\n      frm.set_value(\"set_different_folder\", 1);\n      frm.refresh_field(\"nc_enable\");\n      frm.refresh_field(\"set_different_folder\");\n      frm.save();\n      new frappe.ui.pibiDocs();\n    }\n  },\n});\nfrappe.ui.form.on(\"Attachment Item\", {\n  attachment: function(frm, cdt, cdn) {\n    var row = locals[cdt][cdn];\n    var nc_link = row.nc_url;\n    if (nc_link === undefined){\n      frappe.model.get_value('File', {'name': row.attachment}, ['share_link', 'fileid'], function(d) {\n        var share_link = d.share_link;\n        var nc_url = share_link.substring(0, share_link.length - 17);\n        var file_link = nc_url + 'apps/files/?fileid=' + d.fileid;\n        row.nc_url = '<a href=\"' + file_link + '\" target=\"_blank\">NextCloud</a>';\n      });\n    }\n  }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Project",
  "enabled": 1,
  "modified": "2022-05-04 17:29:47.521259",
  "name": "Project-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "// Copyright (c) 2022, pibiCo and contributors\n// For license information, please see license.txt\n\nfrappe.ui.form.on('Project', {\n  refresh(frm) {\n    if (!frm.doc.set_different_folder){\n      frappe.call({\n        method: 'pibidav.pibidav.custom.get_nc_settings',\n          args: {\n            'doctype': frm.doc.doctype\n          },\n          callback: function(r) {\n            // code snippet\n            // console.log(r.message);\n            if (r.message !== undefined) {\n              frm.set_value('nc_enable', 1);\n              frm.set_value('nc_folder', r.message);\n\t\t      frm.refresh_field('nc_enable');\n\t\t      frm.refresh_field('nc_folder');\n            }\n          }\n      });    \n    }\n    if (!frm.doc.nc_enable && !frm.doc.__islocal) {\n      frm.set_value(\"nc_folder\", \"\");\n      frm.refresh_field(\"nc_folder\");\n    }\n    // Query Filter for Attachment Item for files attached to this doctype and uploaded to nextcloud\n    // to fill in the table if they have not been already fetched from server\n    frm.fields_dict.attachment_item.grid.get_field('attachment').get_query = function(doc, cdt, cdn) {\n      var child = locals[cdt][cdn];\n      //console.log(child);\n      return {    \n        filters:[\n          ['attached_to_doctype', '=', frm.doc.doctype],\n          ['attached_to_name', '=', frm.doc.name],\n          ['uploaded_to_nextcloud', '=', 1],\n        ]\n      };\n    };\n  },\n  nc_enable(frm) {\n    if (frm.doc.nc_enable && !frm.doc.__islocal) {\n      frm.set_value(\"nc_enable\", 1);\n      frm.refresh_field(\"nc_enable\");\n      frm.save();\n      new frappe.ui.pibiDocs();\n    }\n  },\n  set_different_folder(frm) {\n    if (frm.doc.nc_enable && frm.doc.set_different_folder) {\n      frm.set_value(\"nc_enable\", 1);\n      frm.set_value(\"set_different_folder\", 1);\n      frm.refresh_field(\"nc_enable\");\n      frm.refresh_field(\"set_different_folder\");\n      frm.save();\n      new frappe.ui.pibiDocs();\n    }\n  },\n});\nfrappe.ui.form.on(\"Attachment Item\", {\n  attachment: function(frm, cdt, cdn) {\n    var row = locals[cdt][cdn];\n    var nc_link = row.nc_url;\n    if (nc_link === undefined){\n      frappe.model.get_value('File', {'name': row.attachment}, ['share_link', 'fileid'], function(d) {\n        var share_link = d.share_link;\n        var nc_url = share_link.substring(0, share_link.length - 17);\n        var file_link = nc_url + 'apps/files/?fileid=' + d.fileid;\n        row.nc_url = '<a href=\"' + file_link + '\" target=\"_blank\">NextCloud</a>';\n      });\n    }\n  }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Supplier",
  "enabled": 1,
  "modified": "2022-05-06 22:06:58.779893",
  "name": "Supplier-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "// Copyright (c) 2022, pibiCo and contributors\n// For license information, please see license.txt\n\nfrappe.ui.form.on('Supplier', {\n  onload(frm) {\n   \n  },    \n  refresh(frm) {\n    if (!frm.doc.set_different_folder){\n      frappe.call({\n        method: 'pibidav.pibidav.custom.get_nc_settings',\n          args: {\n            'doctype': frm.doc.doctype\n          },\n          callback: function(r) {\n            // code snippet\n            // console.log(r.message);\n            if (r.message !== undefined) {\n              frm.set_value('nc_enable', 1);\n              frm.set_value('nc_folder', r.message);\n\t\t      frm.refresh_field('nc_enable');\n\t\t      frm.refresh_field('nc_folder');\n            }\n          }\n      });    \n    }\n    if (!frm.doc.nc_enable && !frm.doc.__islocal) {\n      frm.set_value(\"nc_folder\", \"\");\n      frm.refresh_field(\"nc_folder\");\n    }\n    // Query Filter for Attachment Item for files attached to this doctype and uploaded to nextcloud\n    // to fill in the table if they have not been already fetched from server\n    frm.fields_dict.attachment_item.grid.get_field('attachment').get_query = function(doc, cdt, cdn) {\n      var child = locals[cdt][cdn];\n      //console.log(child);\n      return {    \n        filters:[\n          ['attached_to_doctype', '=', frm.doc.doctype],\n          ['attached_to_name', '=', frm.doc.name],\n          ['uploaded_to_nextcloud', '=', 1],\n        ]\n      };\n    };\n  },\n  nc_enable(frm) {\n    if (frm.doc.nc_enable && !frm.doc.__islocal) {\n      frm.set_value(\"nc_enable\", 1);\n      frm.refresh_field(\"nc_enable\");\n      frm.save();\n      new frappe.ui.pibiDocs();\n    }\n  },\n  set_different_folder(frm) {\n    if (frm.doc.nc_enable && frm.doc.set_different_folder) {\n      frm.set_value(\"nc_enable\", 1);\n      frm.set_value(\"set_different_folder\", 1);\n      frm.refresh_field(\"nc_enable\");\n      frm.refresh_field(\"set_different_folder\");\n      frm.save();\n      new frappe.ui.pibiDocs();\n    }\n  },\n});\nfrappe.ui.form.on(\"Attachment Item\", {\n  attachment: function(frm, cdt, cdn) {\n    var row = locals[cdt][cdn];\n    var nc_link = row.nc_url;\n    if (nc_link === undefined){\n      frappe.model.get_value('File', {'name': row.attachment}, ['share_link', 'fileid'], function(d) {\n        var share_link = d.share_link;\n        var nc_url = share_link.substring(0, share_link.length - 17);\n        var file_link = nc_url + 'apps/files/?fileid=' + d.fileid;\n        row.nc_url = '<a href=\"' + file_link + '\" target=\"_blank\">NextCloud</a>';\n      });\n    }\n  }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2021-09-28 18:47:38.867398",
  "name": "Item-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on(\"Item\", \"onload\", function(frm) {\n  frm.set_query(\"item_group\", function() {\n    return {\n            \"filters\": {\n                \"is_group\": \"0\",\n            }\n    };\n  });\n});",
  "view": "Form"
 }
]